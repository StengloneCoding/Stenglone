name: .NET CI with SonarCloud

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    name: Build and SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Install SonarCloud Scanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Begin SonarCloud Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet-sonarscanner begin \
            /k:"StengloneCoding_Stenglone" \
            /o:"stenglonecoding" \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="https://sonarcloud.io"

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: End SonarCloud Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

  test:
    name: Run Tests
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Run Tests
        run: |
          dotnet test \
            --configuration Release \
            --logger "trx;LogFileName=test-results.trx" \
            --results-directory "artifacts/test-results"

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: TestResults
          path: artifacts/test-results/**/*.trx

      - name: Report Test Results
        uses: dorny/test-reporter@v2
        if: ${{ always() }}
        with:
          name: Tests
          path: artifacts/test-results/**/*.trx
          reporter: dotnet-trx
